{"paragraphs":[{"text":"%pyspark\n\ndf = spark.read \\\n    .format(\"org.apache.spark.sql.cassandra\") \\\n    .options(table=\"users\", keyspace=\"movielens\") \\\n    .load()\n\ndf.show()","user":"anonymous","dateUpdated":"2025-06-18T09:33:36+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+---+------+-------------+--------+\n|user_id|age|gender|   occupation|zip_code|\n+-------+---+------+-------------+--------+\n|    739| 35|     M|   technician|   73162|\n|    589| 21|     M|       lawyer|   90034|\n|    600| 34|     M|   programmer|   02320|\n|    569| 34|     M|     educator|   91903|\n|    716| 36|     F|administrator|   44265|\n|     17| 30|     M|   programmer|   06355|\n|    104| 27|     M|      student|   55108|\n|    717| 24|     M|   technician|   84105|\n|    102| 38|     M|   programmer|   30220|\n|    882| 35|     M|     engineer|   40503|\n|    305| 23|     M|   programmer|   94086|\n|    106| 61|     M|      retired|   55125|\n|    687| 31|     F|   healthcare|   27713|\n|     35| 20|     F|    homemaker|   42459|\n|    482| 18|     F|      student|   40256|\n|    920| 30|     F|       artist|   90008|\n|    735| 29|     F|   healthcare|   85719|\n|    147| 40|     F|    librarian|   02143|\n|    284| 40|     M|    executive|   92629|\n|    191| 33|     M|administrator|   95161|\n+-------+---+------+-------------+--------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1750232412983_-1400856116","id":"20250618-074012_593200137","dateCreated":"2025-06-18T07:40:12+0000","dateStarted":"2025-06-18T09:33:37+0000","dateFinished":"2025-06-18T09:33:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2365"},{"text":"%sh\nwget http://media.sundog-soft.com/hadoop/ml-100k/u.user -O /tmp/u.user\nwget http://media.sundog-soft.com/hadoop/ml-100k/u.data -O /tmp/u.data\nwget http://media.sundog-soft.com/hadoop/ml-100k/u.item -O /tmp/u.item\necho \"Downloaded ml-100k dataset!\"\n","user":"anonymous","dateUpdated":"2025-06-18T07:54:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"--2025-06-18 07:54:02--  http://media.sundog-soft.com/hadoop/ml-100k/u.user\nResolving media.sundog-soft.com (media.sundog-soft.com)... 52.216.210.225, 3.5.25.122, 3.5.29.67, ...\nConnecting to media.sundog-soft.com (media.sundog-soft.com)|52.216.210.225|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 22628 (22K) [text/plain]\nSaving to: ‘/tmp/u.user’\n\n     0K .......... .......... ..                              100% 90.4K=0.2s\n\n2025-06-18 07:54:03 (90.4 KB/s) - ‘/tmp/u.user’ saved [22628/22628]\n\n--2025-06-18 07:54:03--  http://media.sundog-soft.com/hadoop/ml-100k/u.data\nResolving media.sundog-soft.com (media.sundog-soft.com)... 52.216.12.4, 3.5.29.67, 3.5.25.122, ...\nConnecting to media.sundog-soft.com (media.sundog-soft.com)|52.216.12.4|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 2079229 (2.0M) [application/octet-stream]\nSaving to: ‘/tmp/u.data’\n\n     0K .......... .......... .......... .......... ..........  2% 98.9K 20s\n    50K .......... .......... .......... .......... ..........  4% 1.03M 11s\n   100K .......... .......... .......... .......... ..........  7%  236K 10s\n   150K .......... .......... .......... .......... ..........  9% 12.1M 7s\n   200K .......... .......... .......... .......... .......... 12%  203K 7s\n   250K .......... .......... .......... .......... .......... 14% 8.70M 6s\n   300K .......... .......... .......... .......... .......... 17% 11.5M 5s\n   350K .......... .......... .......... .......... .......... 19%  195K 5s\n   400K .......... .......... .......... .......... .......... 22% 34.8M 5s\n   450K .......... .......... .......... .......... .......... 24% 44.7M 4s\n   500K .......... .......... .......... .......... .......... 27% 54.7M 3s\n   550K .......... .......... .......... .......... .......... 29% 56.1M 3s\n   600K .......... .......... .......... .......... .......... 32%  200K 3s\n   650K .......... .......... .......... .......... .......... 34% 12.9M 3s\n   700K .......... .......... .......... .......... .......... 36%  188K 3s\n   750K .......... .......... .......... .......... .......... 39%  211K 3s\n   800K .......... .......... .......... .......... .......... 41% 8.88M 3s\n   850K .......... .......... .......... .......... .......... 44% 18.5M 3s\n   900K .......... .......... .......... .......... .......... 46% 71.2M 2s\n   950K .......... .......... .......... .......... .......... 49%  107M 2s\n  1000K .......... .......... .......... .......... .......... 51% 4.61M 2s\n  1050K .......... .......... .......... .......... .......... 54% 11.0M 2s\n  1100K .......... .......... .......... .......... .......... 56%  217K 2s\n  1150K .......... .......... .......... .......... .......... 59% 8.07M 2s\n  1200K .......... .......... .......... .......... .......... 61% 3.58M 1s\n  1250K .......... .......... .......... .......... .......... 64% 11.6M 1s\n  1300K .......... .......... .......... .......... .......... 66%  218K 1s\n  1350K .......... .......... .......... .......... .......... 68% 4.10M 1s\n  1400K .......... .......... .......... .......... .......... 71% 6.06M 1s\n  1450K .......... .......... .......... .......... .......... 73% 8.87M 1s\n  1500K .......... .......... .......... .......... .......... 76%  223K 1s\n  1550K .......... .......... .......... .......... .......... 78% 3.65M 1s\n  1600K .......... .......... .......... .......... .......... 81% 5.64M 1s\n  1650K .......... .......... .......... .......... .......... 83% 7.33M 1s\n  1700K .......... .......... .......... .......... .......... 86%  224K 0s\n  1750K .......... .......... .......... .......... .......... 88% 3.99M 0s\n  1800K .......... .......... .......... .......... .......... 91% 5.71M 0s\n  1850K .......... .......... .......... .......... .......... 93% 6.70M 0s\n  1900K .......... .......... .......... .......... .......... 96%  617K 0s\n  1950K .......... .......... .......... .......... .......... 98%  333K 0s\n  2000K .......... .......... ..........                      100% 3.37M=3.3s\n\n2025-06-18 07:54:07 (611 KB/s) - ‘/tmp/u.data’ saved [2079229/2079229]\n\n--2025-06-18 07:54:07--  http://media.sundog-soft.com/hadoop/ml-100k/u.item\nResolving media.sundog-soft.com (media.sundog-soft.com)... 3.5.25.136, 52.217.86.12, 52.217.227.73, ...\nConnecting to media.sundog-soft.com (media.sundog-soft.com)|3.5.25.136|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 236344 (231K) [application/octet-stream]\nSaving to: ‘/tmp/u.item’\n\n     0K .......... .......... .......... .......... .......... 21%  101K 2s\n    50K .......... .......... .......... .......... .......... 43%  803K 1s\n   100K .......... .......... .......... .......... .......... 64%  266K 0s\n   150K .......... .......... .......... .......... .......... 86% 11.3M 0s\n   200K .......... .......... ..........                      100%  128K=1.0s\n\n2025-06-18 07:54:08 (234 KB/s) - ‘/tmp/u.item’ saved [236344/236344]\n\nDownloaded ml-100k dataset!\n"}]},"apps":[],"jobName":"paragraph_1750233214009_-913732607","id":"20250618-075334_1800394448","dateCreated":"2025-06-18T07:53:34+0000","dateStarted":"2025-06-18T07:54:02+0000","dateFinished":"2025-06-18T07:54:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2366"},{"text":"%sh\nhadoop fs -mkdir /tmp/ml-100k/\n","user":"anonymous","dateUpdated":"2025-06-18T07:56:05+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"mkdir: `/tmp/ml-100k': File exists\n"},{"type":"TEXT","data":"ExitValue: 1"}]},"apps":[],"jobName":"paragraph_1750233291689_1733213943","id":"20250618-075451_1806668574","dateCreated":"2025-06-18T07:54:51+0000","dateStarted":"2025-06-18T07:56:06+0000","dateFinished":"2025-06-18T07:56:38+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:2367"},{"text":"print(spark.version)\n","user":"anonymous","dateUpdated":"2025-06-18T08:05:38+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"2.3.0.2.6.5.0-292"}]},"apps":[],"jobName":"paragraph_1750233242194_-14543779","id":"20250618-075402_1743332187","dateCreated":"2025-06-18T07:54:02+0000","dateStarted":"2025-06-18T08:05:38+0000","dateFinished":"2025-06-18T08:05:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2368"},{"text":"%pyspark\n\nfrom pyspark.sql import Row\nfrom pyspark.sql import functions as F\n\n# ParseInput function\ndef parseInput(line):\n    fields = line.split('|')\n    return Row(user_id=int(fields[0]), age=int(fields[1]), gender=fields[2], occupation=fields[3], zip_code=fields[4])\n\n# Load raw user data from HDFS\nlines = spark.sparkContext.textFile(\"hdfs:///tmp/ml-100k/u.user\")\n\n# Apply transformation\nusers = lines.map(parseInput)\n\n# Create DataFrame\nusersDataset = spark.createDataFrame(users)\n\n# Write to Cassandra\nusersDataset.write \\\n    .format(\"org.apache.spark.sql.cassandra\") \\\n    .mode(\"append\") \\\n    .options(table=\"users\", keyspace=\"movielens\") \\\n    .save()\n\n# Read back from Cassandra\nreadUsers = spark.read \\\n    .format(\"org.apache.spark.sql.cassandra\") \\\n    .options(table=\"users\", keyspace=\"movielens\") \\\n    .load()\n\nreadUsers.show()","user":"anonymous","dateUpdated":"2025-06-18T08:10:19+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+---+------+-------------+--------+\n|user_id|age|gender|   occupation|zip_code|\n+-------+---+------+-------------+--------+\n|    739| 35|     M|   technician|   73162|\n|    589| 21|     M|       lawyer|   90034|\n|    600| 34|     M|   programmer|   02320|\n|    569| 34|     M|     educator|   91903|\n|    716| 36|     F|administrator|   44265|\n|     17| 30|     M|   programmer|   06355|\n|    104| 27|     M|      student|   55108|\n|    717| 24|     M|   technician|   84105|\n|    102| 38|     M|   programmer|   30220|\n|    882| 35|     M|     engineer|   40503|\n|    305| 23|     M|   programmer|   94086|\n|    106| 61|     M|      retired|   55125|\n|    687| 31|     F|   healthcare|   27713|\n|     35| 20|     F|    homemaker|   42459|\n|    482| 18|     F|      student|   40256|\n|    920| 30|     F|       artist|   90008|\n|    735| 29|     F|   healthcare|   85719|\n|    147| 40|     F|    librarian|   02143|\n|    284| 40|     M|    executive|   92629|\n|    191| 33|     M|administrator|   95161|\n+-------+---+------+-------------+--------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1750233265553_1635457074","id":"20250618-075425_588723501","dateCreated":"2025-06-18T07:54:25+0000","dateStarted":"2025-06-18T08:10:19+0000","dateFinished":"2025-06-18T08:10:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2369"},{"text":"%pyspark\n\nfrom pyspark.sql import Row\nfrom pyspark.sql import functions as F\n\n# Parse each line into (user_id, movie_id, rating)\ndef parseInput2(line):\n    fields = line.split('\\t')\n    return Row(user_id=int(fields[0]), movie_id=int(fields[1]), rating=int(fields[2]))\n\n# Load ratings data from HDFS\nlines = spark.sparkContext.textFile(\"hdfs:///tmp/ml-100k/u.data\")\n\n# Map lines to Rows\nratings = lines.map(parseInput2)\n\n# Create DataFrame from ratings\nratingsDataset = spark.createDataFrame(ratings)\n\n# Write to Cassandra\nratingsDataset.write \\\n    .format(\"org.apache.spark.sql.cassandra\") \\\n    .mode(\"append\") \\\n    .options(table=\"rate\", keyspace=\"movielens\") \\\n    .save()\n\n# Read back from Cassandra\nreadRatings = spark.read \\\n    .format(\"org.apache.spark.sql.cassandra\") \\\n    .options(table=\"rate\", keyspace=\"movielens\") \\\n    .load()\n\n# Show the result\nreadRatings.show()","user":"anonymous","dateUpdated":"2025-06-18T09:00:38+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750233424921_-923645778","id":"20250618-075704_1154017773","dateCreated":"2025-06-18T07:57:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2370","dateFinished":"2025-06-18T09:02:12+0000","dateStarted":"2025-06-18T09:00:39+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+--------+------+\n|user_id|movie_id|rating|\n+-------+--------+------+\n|    739|      22|     5|\n|    739|      50|     4|\n|    739|      55|     1|\n|    739|      56|     4|\n|    739|      69|     5|\n|    739|      79|     4|\n|    739|      96|     5|\n|    739|      97|     5|\n|    739|      98|     3|\n|    739|     100|     5|\n|    739|     132|     4|\n|    739|     168|     1|\n|    739|     172|     4|\n|    739|     176|     1|\n|    739|     187|     4|\n|    739|     195|     5|\n|    739|     197|     1|\n|    739|     216|     4|\n|    739|     286|     2|\n|    739|     288|     1|\n+-------+--------+------+\nonly showing top 20 rows\n\n"}]}},{"text":"%pyspark\r\n\r\nfrom pyspark.sql import Row\r\nfrom pyspark.sql import functions as F\r\n\r\n# Parse movie lines\r\ndef parse_movie(line):\r\n    fields = line.split('|')\r\n    return Row(\r\n        movie_id=int(fields[0]),\r\n        title=fields[1],\r\n        genre_unknown=int(fields[5]),\r\n        genre_action=int(fields[6]),\r\n        genre_adventure=int(fields[7]),\r\n        genre_animation=int(fields[8]),\r\n        genre_children=int(fields[9]),\r\n        genre_comedy=int(fields[10]),\r\n        genre_crime=int(fields[11]),\r\n        genre_documentary=int(fields[12]),\r\n        genre_drama=int(fields[13]),\r\n        genre_fantasy=int(fields[14]),\r\n        genre_filmnoir=int(fields[15]),\r\n        genre_horror=int(fields[16]),\r\n        genre_musical=int(fields[17]),\r\n        genre_mystery=int(fields[18]),\r\n        genre_romance=int(fields[19]),\r\n        genre_scifi=int(fields[20]),\r\n        genre_thriller=int(fields[21]),\r\n        genre_war=int(fields[22]),\r\n        genre_western=int(fields[23])\r\n    )\r\n\r\n# Load raw movie data from HDFS\r\nmovie_lines = spark.sparkContext.textFile(\"hdfs:///tmp/ml-100k/u.item\")\r\n\r\n# Apply parsing\r\nmovies = movie_lines.map(parse_movie)\r\n\r\n# Convert to DataFrame\r\nmovies_df = spark.createDataFrame(movies)\r\n\r\n# Write to Cassandra\r\nmovies_df.write \\\r\n    .format(\"org.apache.spark.sql.cassandra\") \\\r\n    .mode(\"append\") \\\r\n    .options(table=\"topic_name\", keyspace=\"movielens\") \\\r\n    .save()\r\n\r\n# Read back from Cassandra\r\nreadMovies = spark.read \\\r\n    .format(\"org.apache.spark.sql.cassandra\") \\\r\n    .options(table=\"topic_name\", keyspace=\"movielens\") \\\r\n    .load()\r\n\r\n# Show result\r\nreadMovies.show()","user":"anonymous","dateUpdated":"2025-06-18T09:08:54+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750236783132_326395176","id":"20250618-085303_625199168","dateCreated":"2025-06-18T08:53:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2800","dateFinished":"2025-06-18T09:09:15+0000","dateStarted":"2025-06-18T09:08:55+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+------------+---------------+---------------+--------------+------------+-----------+-----------------+-----------+-------------+--------------+------------+-------------+-------------+-------------+-----------+--------------+-------------+---------+-------------+--------------------+\n|movie_id|genre_action|genre_adventure|genre_animation|genre_children|genre_comedy|genre_crime|genre_documentary|genre_drama|genre_fantasy|genre_filmnoir|genre_horror|genre_musical|genre_mystery|genre_romance|genre_scifi|genre_thriller|genre_unknown|genre_war|genre_western|               title|\n+--------+------------+---------------+---------------+--------------+------------+-----------+-----------------+-----------+-------------+--------------+------------+-------------+-------------+-------------+-----------+--------------+-------------+---------+-------------+--------------------+\n|     739|           0|              0|              0|             0|           1|          0|                0|          0|            0|             0|           0|            0|            0|            1|          0|             0|            0|        0|            0| Pretty Woman (1990)|\n|    1293|           0|              1|              0|             1|           0|          0|                0|          0|            1|             0|           0|            0|            0|            0|          1|             0|            0|        0|            0|     Star Kid (1997)|\n|    1236|           0|              0|              0|             0|           0|          0|                0|          1|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|Other Voices, Oth...|\n|     589|           0|              0|              0|             0|           0|          0|                0|          0|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            1|Wild Bunch, The (...|\n|     600|           0|              0|              0|             1|           0|          0|                0|          0|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|Daniel Defoe's Ro...|\n|     569|           0|              0|              0|             0|           0|          0|                0|          1|            0|             0|           1|            0|            0|            0|          0|             0|            0|        0|            0|         Wolf (1994)|\n|    1265|           0|              0|              0|             0|           0|          0|                0|          1|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|    Star Maps (1997)|\n|     716|           0|              0|              0|             0|           0|          0|                0|          1|            0|             0|           0|            0|            0|            1|          0|             0|            0|        0|            0|Home for the Holi...|\n|    1379|           0|              0|              0|             0|           0|          0|                0|          0|            0|             0|           0|            0|            0|            1|          0|             0|            0|        0|            0|Love and Other Ca...|\n|    1368|           0|              0|              0|             0|           0|          0|                0|          1|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|Mina Tannenbaum (...|\n|    1384|           0|              0|              0|             0|           0|          0|                0|          1|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|      Squeeze (1996)|\n|      17|           1|              0|              0|             0|           1|          1|                0|          0|            0|             0|           1|            0|            0|            0|          0|             1|            0|        0|            0|From Dusk Till Da...|\n|     971|           0|              0|              0|             0|           1|          0|                0|          0|            0|             0|           0|            0|            0|            0|          0|             0|            0|        1|            0| Mediterraneo (1991)|\n|     104|           0|              0|              0|             0|           1|          0|                0|          0|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0| Theodore Rex (1995)|\n|    1287|           0|              0|              0|             0|           1|          0|                0|          0|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|           Ed (1996)|\n|    1629|           0|              0|              0|             0|           0|          0|                1|          0|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|    Nico Icon (1995)|\n|    1108|           0|              0|              0|             0|           0|          0|                0|          1|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|Feast of July (1995)|\n|     717|           0|              0|              0|             0|           0|          0|                0|          1|            0|             0|           0|            0|            0|            0|          0|             1|            0|        0|            0|   Juror, The (1996)|\n|    1086|           0|              0|              0|             0|           0|          0|                0|          1|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|It's My Party (1995)|\n|     102|           0|              0|              1|             1|           0|          0|                0|          0|            0|             0|           0|            0|            0|            0|          0|             0|            0|        0|            0|Aristocats, The (...|\n+--------+------------+---------------+---------------+--------------+------------+-----------+-----------------+-----------+-------------+--------------+------------+-------------+-------------+-------------+-----------+--------------+-------------+---------+-------------+--------------------+\nonly showing top 20 rows\n\n"}]}},{"text":"%md\r\n## 1) Calculate the average rating for each movie.","user":"anonymous","dateUpdated":"2025-06-18T09:11:23+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750237734943_-1840390801","id":"20250618-090854_651489788","dateCreated":"2025-06-18T09:08:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3065","dateFinished":"2025-06-18T09:11:24+0000","dateStarted":"2025-06-18T09:11:23+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>1) Calculate the average rating for each movie.</h2>\n"}]}},{"text":"%pyspark\n\nfrom pyspark.sql.functions import avg\n\n# Join ratings and movie metadata on movieid\njoined_df = readRatings.join(readMovies, on=\"movie_id\")\n\n# Group by title and compute average rating\navg_ratings_df = joined_df.groupBy(\"title\").agg(avg(\"rating\").alias(\"avg_rating\"))\n\n# Order by average rating descending and get top 20\ntop_20_movies = avg_ratings_df.orderBy(\"avg_rating\", ascending=False).limit(20)\n\n# Show the result\ntop_20_movies.show()\n","user":"anonymous","dateUpdated":"2025-06-18T09:16:12+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750237883392_-1059888525","id":"20250618-091123_1129169471","dateCreated":"2025-06-18T09:11:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3165","dateFinished":"2025-06-18T09:16:42+0000","dateStarted":"2025-06-18T09:16:13+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----------------+\n|               title|       avg_rating|\n+--------------------+-----------------+\n|     Star Kid (1997)|              5.0|\n|Aiqing wansui (1994)|              5.0|\n|Marlene Dietrich:...|              5.0|\n|Saint of Fort Was...|              5.0|\n|Someone Else's Am...|              5.0|\n|They Made Me a Cr...|              5.0|\n|  Prefontaine (1997)|              5.0|\n|Great Day in Harl...|              5.0|\n|Entertaining Ange...|              5.0|\n|Santa with Muscle...|              5.0|\n|Pather Panchali (...|            4.625|\n|         Anna (1996)|              4.5|\n|Some Mother's Son...|              4.5|\n|Maya Lin: A Stron...|              4.5|\n|      Everest (1998)|              4.5|\n|Close Shave, A (1...|4.491071428571429|\n|Schindler's List ...|4.466442953020135|\n|Wrong Trousers, T...|4.466101694915254|\n|   Casablanca (1942)| 4.45679012345679|\n|Wallace & Gromit:...|4.447761194029851|\n+--------------------+-----------------+\n\n"}]}},{"text":"%md\r\n## 2) Identify the top ten movies with the highest average ratings.","user":"anonymous","dateUpdated":"2025-06-18T09:17:23+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750237936376_-2112684109","id":"20250618-091216_2097225939","dateCreated":"2025-06-18T09:12:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3238","dateFinished":"2025-06-18T09:17:23+0000","dateStarted":"2025-06-18T09:17:23+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>2) Identify the top ten movies with the highest average ratings.</h2>\n"}]}},{"text":"%pyspark\r\n\r\ntop_20_movies.limit(10).show()","user":"anonymous","dateUpdated":"2025-06-18T09:17:42+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750238243752_-330888406","id":"20250618-091723_1205581468","dateCreated":"2025-06-18T09:17:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3369","dateFinished":"2025-06-18T09:17:45+0000","dateStarted":"2025-06-18T09:17:42+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+----------+\n|               title|avg_rating|\n+--------------------+----------+\n|Aiqing wansui (1994)|       5.0|\n|Marlene Dietrich:...|       5.0|\n|Someone Else's Am...|       5.0|\n|     Star Kid (1997)|       5.0|\n|They Made Me a Cr...|       5.0|\n|  Prefontaine (1997)|       5.0|\n|Great Day in Harl...|       5.0|\n|Entertaining Ange...|       5.0|\n|Saint of Fort Was...|       5.0|\n|Santa with Muscle...|       5.0|\n+--------------------+----------+\n\n"}]}},{"text":"%md\n## 3) Find the users who have rated at least 50 movies and identify their favourite movie genres.","user":"anonymous","dateUpdated":"2025-06-18T09:18:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750238262856_-2105719758","id":"20250618-091742_354258722","dateCreated":"2025-06-18T09:17:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3445","dateFinished":"2025-06-18T09:18:02+0000","dateStarted":"2025-06-18T09:18:02+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>3) Find the users who have rated at least 50 movies and identify their favourite movie genres.</h2>\n"}]}},{"text":"%pyspark\r\n\r\nfrom pyspark.sql.functions import col, count, row_number, lit, expr, explode, array\r\nfrom pyspark.sql.window import Window\r\n\r\n# Step 1: Get users who rated at least 50 movies\r\nactive_users = readRatings \\\r\n    .groupBy(\"user_id\") \\\r\n    .agg(count(\"*\").alias(\"rating_count\")) \\\r\n    .filter(\"rating_count >= 50\")\r\n\r\n# Step 2: Join with ratings and movies to get full info\r\nratings_with_movies = readRatings.alias(\"r\") \\\r\n    .join(active_users.alias(\"a\"), \"user_id\") \\\r\n    .join(readMovies.alias(\"m\"), \"movie_id\")\r\n\r\n# Step 3: Genre columns (Zeppelin version uses 'genre_' prefix if you imported like that)\r\ngenre_cols = [\r\n    \"genre_unknown\", \"genre_action\", \"genre_adventure\", \"genre_animation\", \"genre_children\", \"genre_comedy\", \"genre_crime\",\r\n    \"genre_documentary\", \"genre_drama\", \"genre_fantasy\", \"genre_filmnoir\", \"genre_horror\", \"genre_musical\", \"genre_mystery\",\r\n    \"genre_romance\", \"genre_scifi\", \"genre_thriller\", \"genre_war\", \"genre_western\"\r\n]\r\n\r\n# Step 4: Safely explode genres\r\ngenre_exprs = [expr(\"CASE WHEN {0} = 1 THEN '{0}' ELSE NULL END\".format(g)) for g in genre_cols]\r\n\r\nratings_genres = ratings_with_movies.withColumn(\r\n    \"genre\",\r\n    explode(array(*genre_exprs))\r\n).filter(col(\"genre\").isNotNull())\r\n\r\n# Step 5: Count genre frequency per user\r\ngenre_counts = ratings_genres.groupBy(\"user_id\", \"genre\").agg(count(\"*\").alias(\"count\"))\r\n\r\n# Step 6: Rank and get top genre per user\r\nrank_spec = Window.partitionBy(\"user_id\").orderBy(col(\"count\").desc())\r\n\r\ntop_genres = genre_counts.withColumn(\"rank\", row_number().over(rank_spec)) \\\r\n                         .filter(col(\"rank\") == 1) \\\r\n                         .orderBy(col(\"count\").desc())\r\n\r\n# Final Output\r\ntop_genres.select(\"user_id\", \"genre\", \"count\").show()\r\n","user":"anonymous","dateUpdated":"2025-06-18T09:29:06+0000","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":735.969,"optionOpen":false}}},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750238282345_128947826","id":"20250618-091802_1123141434","dateCreated":"2025-06-18T09:18:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3529","dateFinished":"2025-06-18T09:30:09+0000","dateStarted":"2025-06-18T09:29:06+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------------+-----+\n|user_id|       genre|count|\n+-------+------------+-----+\n|    655| genre_drama|  410|\n|    405| genre_drama|  309|\n|    537| genre_drama|  251|\n|    450| genre_drama|  237|\n|     13| genre_drama|  218|\n|    234| genre_drama|  213|\n|    416| genre_drama|  212|\n|    279|genre_comedy|  211|\n|    201| genre_drama|  196|\n|    393|genre_comedy|  191|\n|    181| genre_drama|  188|\n|    303|genre_comedy|  184|\n|    334| genre_drama|  174|\n|     90| genre_drama|  173|\n|    378| genre_drama|  170|\n|    276| genre_drama|  168|\n|    429| genre_drama|  167|\n|    474| genre_drama|  166|\n|    293| genre_drama|  165|\n|    308| genre_drama|  163|\n+-------+------------+-----+\nonly showing top 20 rows\n\n"}]}},{"text":"%md\r\n## 4) Find all the users who are less than 20 years old.\r\n","user":"anonymous","dateUpdated":"2025-06-18T09:31:07+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750238539837_-1287360492","id":"20250618-092219_1354785381","dateCreated":"2025-06-18T09:22:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3605","dateFinished":"2025-06-18T09:31:07+0000","dateStarted":"2025-06-18T09:31:07+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>4) Find all the users who are less than 20 years old.</h2>\n"}]}},{"text":"%pyspark\n\nyoung = readUsers.filter(\"age < 20\")\n\nyoung.show()\n","user":"anonymous","dateUpdated":"2025-06-18T09:31:23+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750239066894_130577646","id":"20250618-093106_1840128706","dateCreated":"2025-06-18T09:31:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3798","dateFinished":"2025-06-18T09:31:23+0000","dateStarted":"2025-06-18T09:31:23+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+---+------+----------+--------+\n|user_id|age|gender|occupation|zip_code|\n+-------+---+------+----------+--------+\n|    482| 18|     F|   student|   40256|\n|    303| 19|     M|   student|   14853|\n|    101| 15|     M|   student|   05146|\n|    872| 19|     F|   student|   74078|\n|    601| 19|     F|    artist|   99687|\n|    817| 19|     M|   student|   60152|\n|    710| 19|     M|   student|   92020|\n|    246| 19|     M|   student|   28734|\n|    451| 16|     M|   student|   48446|\n|    393| 19|     M|   student|   83686|\n|    582| 17|     M|   student|   93003|\n|    747| 19|     M|     other|   93612|\n|    700| 17|     M|   student|   76309|\n|    628| 13|     M|      none|   94306|\n|    425| 19|     M|   student|   58644|\n|    642| 18|     F|   student|   95521|\n|    588| 18|     F|   student|   93063|\n|     30|  7|     M|   student|   55436|\n|    528| 18|     M|   student|   55104|\n|    674| 13|     F|   student|   55337|\n+-------+---+------+----------+--------+\nonly showing top 20 rows\n\n"}]}},{"text":"%md\n## 5) Find all the users whose occupation is “scientist” and whose age is between 30 and 40 years old.","user":"anonymous","dateUpdated":"2025-06-18T09:32:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750239083075_-1997068447","id":"20250618-093123_1424796001","dateCreated":"2025-06-18T09:31:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3874","dateFinished":"2025-06-18T09:31:46+0000","dateStarted":"2025-06-18T09:31:46+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>5) Find all the users whose occupation is “scientist” and whose age is between 30 and 40 years old.</h2>\n"}]}},{"text":"%pyspark\n\nscientist3040 = readUsers.filter(\n    (col(\"age\") > 30) & (col(\"age\") < 40) & (col(\"occupation\") == \"scientist\"))\n    \nscientist3040.show()\n","user":"anonymous","dateUpdated":"2025-06-18T09:32:18+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750239105579_-456287020","id":"20250618-093145_1188113250","dateCreated":"2025-06-18T09:31:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3957","dateFinished":"2025-06-18T09:32:19+0000","dateStarted":"2025-06-18T09:32:19+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+---+------+----------+--------+\n|user_id|age|gender|occupation|zip_code|\n+-------+---+------+----------+--------+\n|    272| 33|     M| scientist|   53706|\n|    430| 38|     M| scientist|   98199|\n|    643| 39|     M| scientist|   55122|\n|    543| 33|     M| scientist|   95123|\n|    730| 31|     F| scientist|   32114|\n|    554| 32|     M| scientist|   62901|\n|     40| 38|     M| scientist|   27514|\n|     71| 39|     M| scientist|   98034|\n|     74| 39|     M| scientist|   T8H1N|\n|    183| 33|     M| scientist|   27708|\n|    107| 39|     M| scientist|   60466|\n|    337| 37|     M| scientist|   10522|\n|    874| 36|     M| scientist|   37076|\n|    538| 31|     M| scientist|   21010|\n+-------+---+------+----------+--------+\n\n"}]}},{"text":"\n","user":"anonymous","dateUpdated":"2025-06-18T09:32:49+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750239138868_-368518298","id":"20250618-093218_1968818590","dateCreated":"2025-06-18T09:32:18+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4029"}],"name":"STQD6324_ASSIGNMENT3_P145327","id":"2KX5WSBKY","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}